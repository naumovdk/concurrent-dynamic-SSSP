buildscript {
    dependencies {
        classpath "org.jetbrains.kotlinx:atomicfu-gradle-plugin:0.14.3"
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.5.21'
    id "me.champeau.gradle.jmh" version "0.5.0"
}


apply plugin: 'idea'
apply plugin: 'kotlinx-atomicfu'

group = 'me.dimna'
version = '1.0-SNAPSHOT'

test {
    useJUnitPlatform()

    jvmArgs("--add-opens", "java.base/jdk.internal.misc=ALL-UNNAMED",
            "--add-exports", "java.base/jdk.internal.util=ALL-UNNAMED")
    maxHeapSize = "6g"
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.jetbrains.kotlinx:lincheck:2.14.1'
    testImplementation 'org.jetbrains.kotlinx:lincheck:2.14.1'
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.7.2"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:5.7.2"
}


compileKotlin {
    kotlinOptions.jvmTarget = '1.8'
}

compileTestKotlin {
    kotlinOptions.jvmTarget = '1.8'
}

jmh {
    duplicateClassesStrategy = DuplicatesStrategy.EXCLUDE
}

compileJmhKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

sourceSets {
    jmh {
        java.srcDirs = ['src/jmh/java']
        kotlin.srcDirs = ['src/jmh/kotlin']
        compileClasspath += sourceSets.main.runtimeClasspath
    }
}

jmhJar.doFirst {
    new File("build/resources/test").mkdirs()
}